\documentclass[twoside,a4paper,12pt]{article}
\usepackage{mathptmx, helvet, courier}
\renewcommand\familydefault{\sfdefault}
\usepackage[german]{babel}
\usepackage[utf8]{inputenc}
\usepackage[T1]{fontenc}
\usepackage{float}
\usepackage{graphicx}
\usepackage{caption}
\usepackage{geometry}
\geometry{verbose,tmargin=2.5cm,bmargin=2.5cm,lmargin=2.5cm,rmargin=2.5cm}
\setcounter{secnumdepth}{2}
\setcounter{tocdepth}{2}
\usepackage{url}
\usepackage[unicode=true,pdfusetitle,
            bookmarks=true,bookmarksnumbered=true,bookmarksopen=true,bookmarksopenlevel=2,
            breaklinks=false,pdfborder={0 0 1},backref=false,colorlinks=false]
{hyperref}
\hypersetup{pdfstartview={XYZ null null 1}}
\usepackage{breakurl}
\usepackage{booktabs}
\usepackage{longtable}
\usepackage{array}
\usepackage{multirow}
\usepackage[table]{xcolor}
\usepackage{wrapfig}
\usepackage{float}
\usepackage{colortbl}
\usepackage{pdflscape}
\usepackage{tabu}
\usepackage{threeparttable}
\usepackage{fullpage}
\usepackage{pdflscape}
\usepackage{ifthen}
\usepackage{graphicx}
\usepackage{subfig}


\begin{document}

<<setup, include=FALSE, cache=FALSE, echo=FALSE, eval=TRUE>>=
library(knitr)
library(kableExtra)
options(knitr.table.format = "latex")
# set global chunk options
opts_chunk$set( fig.align='center', fig.show='hold')
options(formatR.arrow=TRUE,width=90)

sample <- paste(unlist(strsplit(sample, split = "_")), collapse = " ")
Sureselect <- sureselect_type
@

\title{\Sexpr{sample} - Report}

\author{\Sexpr{author}}
\maketitle
\tableofcontents

\clearpage
%%%% ÜBERSICHT %%%%
\section{\"{U}bersicht}
% Übersicht über Schlüsselergebnisse der Analyse
<<eval=TRUE, results="tex", echo=FALSE>>=
if (sureselect_type %in% c("V5UTR", "V6UTR", "V6")){
  sureselect_type <- paste("Agilent SureSelect", sureselect_type, sep = " ")
} else if (sureselect_type %in% c("TSO500", "TruSight_Tumor")) {
  sureselect_type <- paste("Illumina", sureselect_type, sep = " ")
}
# tmp1 <- data.frame(Eigenschaften = c("Capture Kit", "Abgedeckte Region", paste0("Mutationslast (VAF > ", vaf, "%)"), paste0("Anzahl Mutationen (VAF > ", vaf, "%)"), "Anzahl CNV- Regionen"), Wert = c(as.character(sureselect_type), paste(covered_region, "Mb", sep = ""), paste0(round(x = filt_result_td$tmb, digits = 2), "/Mb"), round(x = sum(as.numeric(mutation_analysis_result$mut_tab[, 2])), digits = 0), paste0(round(x = dim(cnv_analysis_results$cnvs_annotated$CNVsAnnotated)[1], digits = 0), " Regionen")))
tmp1 <- data.frame(Eigenschaften = c("Capture Kit", "Abgedeckte Region", paste0("Mutationslast (VAF > ", vaf, "%)"), paste0("Anzahl Mutationen (VAF > ", vaf, "%)")), Wert = c(as.character(sureselect_type), paste(covered_region, "Mb", sep = ""), paste0(round(x = filt_result_td$tmb, digits = 2), "/Mb"), round(x = sum(as.numeric(mutation_analysis_result$mut_tab[, 3])), digits = 0)))
kable(tmp1, booktabs = T, row.names = F, caption = "Schl\"usselergebnisse der Analyse") %>% kable_styling(latex_options = c( "hold_position"), font_size = 12) %>% column_spec(1, width = "25em") %>% column_spec(2, width = "9em")
@

% Mutationsübersicht
<<eval=TRUE, results="tex", echo=FALSE>>=
tmp <- mutation_analysis_result$mut_tab
colnames(tmp) <- c("Mutationstyp", "Zygosit\"at", "Anzahl", "TS", "OG", "HS")
tmp2 <- data.frame(Mutationstyp = c("SNV", "InDel"),
                   Anzahl = c(sum(as.numeric(tmp[c(1:2), "Anzahl"])),
                              sum(as.numeric(tmp[c(3:4), "Anzahl"]))),
                   Tumorsuppressoren = c(sum(as.numeric(tmp[c(1:2), "TS"])),
                                         sum(as.numeric(tmp[c(3:4), "TS"]))),
                   Onkogene = c(sum(as.numeric(tmp[c(1:2), "OG"])),
                                sum(as.numeric(tmp[c(3:4), "OG"]))),
                   Hotspots = c(sum(as.numeric(tmp[c(1:2), "HS"])),
                                sum(as.numeric(tmp[c(3:4), "HS"]))))
kable(tmp2, booktabs = T, row.names = F, caption = "Zusammenfassung der identifizierten Mutationen") %>% kable_styling(latex_options = c( "hold_position"), font_size = 12)
@

% Grafiken zur Übersicht
\begin{figure}[h]
\centering
  \subfloat{\includegraphics[height = 0.4\textwidth]{\Sexpr{outfile_circos}}}
  \caption{Darstellung aller identifizierten Mutationen aus DNA und Fusionen aus RNA (im inneren Kreis). In Gelb ist der abgedeckte Breich dargestellt.}
\end{figure}

# TODO
<<eval=TRUE, results="tex", echo=FALSE>>=
q_t <- c()
if (round(x = sum(stats$cover$cov[[1]][, 2] * stats$cover$cov[[1]][, 5]), digits = 2) < 80){
  q_t[1] <- "Akzeptabel"} else if (round(x = sum(stats$cover$cov[[1]][, 2] * stats$cover$cov[[1]][, 5]), digits = 2) < 100){
    q_t[1] <- "Gut"
  } else {q_t[1] <- "Sehr gut"}
if (round(stats$cover$perc[[1]][1], digits = 2) * 100 > 90){
  q_t[2] <- "Sehr gut"
} else { q_t[2] <- "Akzeptabel"}
if (round(stats$cover$perc[[1]][2], digits = 2) * 100 > 90){
  q_t[3] <- "Sehr gut"
} else {q_t[3] <- "Akzeptabel"}
if (as.numeric(stats$avreads$tin) > 100){
  q_t[4] <- "Sehr gut"
} else {q_t[4] <- "Akzeptabel"}
if (as.numeric(stats$qc_check$gc_content[[1]]) >= 40 && as.numeric(stats$qc_check$gc_content[[1]]) <= 60){
  q_t[5] <- "Sehr gut"
} else {q_t[5] <- "Akzeptabel"}
if (round(stats$qc_check$mean_QC[[1]], digits = 2) > 30){
  q_t[6] <- "Sehr gut"
} else {q_t[6] <- "Akzeptabel"}
qp_t <- c(round(x = sum(stats$cover$cov[[1]][, 2] * stats$cover$cov[[1]][, 5]), digits = 2), paste0(round(stats$cover$perc[[1]][1], digits = 2) * 100 , "%"), paste0(round(stats$cover$perc[[1]][2], digits = 2) * 100 , "%"), as.numeric(stats$avreads$tin) , as.numeric(stats$qc_check$gc_content[[1]]), round(stats$qc_check$mean_QC[[1]], digits = 2))
names(qp_t) <- c("Mittlere Coverage", "Coverage > 20", "Coverage > 100", "Insertlänge", "GC-Anteil", "Mittlere Qualität")        
if(length(which(q_t != "Sehr gut") > 0)){
  warn_t <- paste0(names(qp_t)[which(q_t != "Sehr gut")], ": ", qp_t[which(q_t != "Sehr gut")])
  q_t1 <- paste0(warn_t, collapse = ", ")
} else {
  q_t1 <- "Keine."
}
tab <- rbind(c("Tumor", q_t1))
colnames(tab) <- c("Probe" , "Auff\"alligkeiten")
kable(tab, booktabs = T, row.names = F, caption = "Auff\"alligkeiten in Qualit\"atsmerkmalen der Proben") %>% kable_styling(latex_options = c( "hold_position"), font_size = 12)
@

\clearpage

%%%% MUTATIONSANALYSE %%%%
\section{Mutationsanalyse}
\subsection{Detaillierte \"Ubersicht}
In der Analyse werden nur seltene Mutationen mit einer \textit{Variant Allele Frequency} (VAF) über \Sexpr{vaf}\% betrachtet. Gezeigt werden Mutationen vom Typ \textit{single nucleotide variation} (SNV) und \textit{Insertion and Deletions} (InDel).\\
Im Weiteren werden die Ergebnisse der Mutationsanalyse in Tabellen dargestellt. Zunächst eine Übersicht über die Anzahl der Mutationen, aufgeteilt in verschiedene Mutationstypen (Tab \ref{mut_ana_ov}). Es wird gelistet, wieviele dieser Mutationen in einem sogenannten Cancergene nach OncoKB, aufgeteilt in Tumorsuppressoren und Onkogene, identifiziert wurden. Desweiteren wird die Anzahl der sogenannten \textit{Cancer Hotspot Mutationen} (HS) nach cancerhotspots.org angegeben.\\
Die Lage der Mutationen im Genom wird, aufgeteilt nach Mutationstyp (SNVs, Indel), im Circosplot dargestellt (Abb \ref{cir_plot}). Die gelben Bereiche sind die Regionen, die das Panel abdeckt. Wenn Fusionen in der Probe identifiziert wurden, werde diese im inneren Kreis abgebildet.

<<mut_ana_ov, eval=TRUE, results="tex", echo=FALSE>>=
tmp <- mutation_analysis_result$mut_tab
colnames(tmp) <- c("Mutationstyp", "Zygosit\"at", "Anzahl", "Tumorsuppressoren", "Onkogene", "Hotspots")
tmp[c(1, 3), 2] <- "homozygot"
tmp[c(2, 4), 2] <- "heterozygot"
kable(tmp, booktabs = T, row.names = F, caption = "Zusammenfassung der identifizierten Mutationen \\label{mut_ana_ov}") %>% kable_styling(latex_options = c( "hold_position"), font_size = 9)
@

\begin{figure}[H]
\centering
\includegraphics[width=0.6\textwidth]{\Sexpr{outfile_circos}}
\caption{Circos Plot mit allen identifizierten Mutationen}
\label{cir_plot}
\end{figure}
\clearpage

\subsection{Cancer Genes}
\subsubsection{Mutationen}\label{som_mut_section}
In folgenden Tabellen werden Gensymbol, Genname und der entsprechende Aminos\"aurenaustausch gelistet.
Die Funktion der Mutationen werden durch Abkürzungen beschrieben:
\begin{itemize}
  \item nsSNV - nonsynonymous SNV
  \item SG - stopgain
  \item SL - startloss
  \item nfsDel - nonframeshift deletion
  \item nfsSub - nonframeshift substitution
  \item fsDel - frameshift deletion
  \item nfsIns - nonframeshift insertion
  \item fsIns - frameshift insertion
  \item splice - splice region variant
\end{itemize}
Die VAF wird gelistet, zusammen mit den zu Grunde liegenden Readcounts. Zunächst die Anzahl an Variantenreads, danach die Gesamtcoverage an dieser Stelle. 
Außerdem werden nur seltene Mutationen gelistet. Selten bedeutet dabei, dass die \textit{Minor Allele Frequency} (MAF) unter \Sexpr{maf_cutoff} liegen muss, basierend auf den Datenbanken gnomAD exome.
Desweiteren werden Strukturanalysen via Condel und CADD zu den entsprechend mutierten Proteinen durchgeführt. Diese Ergebnisse werden für Condel in den folgenden Tabellen durch eine Klassifizierung beschrieben: D - deleterious, N - neutral.
Die Analyse beinhaltet zusätzliche Annotationen bekannter Mutationen wie Cosmic, Clinvar und dbSNP. Die Ergebnisse werden nur reduziert und übersichtlich dargestellt. Es werden für die Mutationen hier nur die entsprechenden Cosmic Nummern angegeben.
Am Ende wird die Zuordnung des Gens als Cancergenes nach der Klassifikation von OncoKB dargestellt. Die folgende Tabelle \ref{som_mut_cg} enthält alle SNVs und InDels in Cancergenes für diese Probe.\\

\definecolor{aquamarine}{rgb}{0, 1.0, 1.0}
\textbf{Bei den Gensymbolen ist ein Link zur Mutation entsprechenden Seite von {\color{aquamarine}\textit{Genome Nexus}} hinterlegt. Dort wird ein Lollipop-Plot zur Lage der Mutation im Gen angezeigt sowie weitere Informationen. Bei dem Aminosäurenaustausch ist ein Link zum Eintrag der Mutation in der {\color{aquamarine}\textit{The Variant Interpretation for Cancer Consortium Meta-Knowledgebase}} verknüpft. Dieser Link funktioniert allerdings aufgrund eines Sonderzeichens in der URL nicht bei Verwendung des Dokuments mit der Vorschau von Apple, aber unter Verwendung von Acrobat Reader.}\\

Im Anhang  befinden sich Tabellen zu allen detektierten Mutationen (Kap \ref{all_som_mut}). Es werden allerdings nur seltene, exonische Mutationen mit einer VAF über \Sexpr{vaf}\% gelistet.

<<som_mut_cg, eval=TRUE, results="tex", echo=FALSE>>=
tmp <- mutation_analysis_result$ts_og[, c(1:5, 7:12, 14, 16:20)]
if(dim(tmp)[1] == 0) {
  kable(data.frame(Gen = c("."), 'AA-Austausch' = c("."), Funktion = c("."), VAF = c("."), MAF = c("."), Condel = c("."), Cosmic = c("."), OG = c("."), TSG = c(".")), format = "latex", caption = "Es wurden keine somatischen Mutationen in Cancergenes identifiziert.\\label{som_mut_cg}", booktabs = T, longtable = T, digits = 2, row.names = F) %>% kable_styling(latex_options = c( "HOLD_position"), font_size = 9) %>% column_spec(c(2, 7), width = "6em") %>% column_spec(c(1, 5), width = "4em") %>% column_spec(c(3:4), width = "4em") %>% column_spec(c(6, 8:9), width = "2em") %>% row_spec(0, angle = 60)
} else {
  # add a hyperlink to metaKB and one to GenomeNexus
  tmp$AAChange <- gsub(pattern = "_", replacement = "\\_", x = tmp$AAChange, fixed = TRUE)
  tmp$Gene.refGene_new <- paste0("{\\href{https://www.genomenexus.org/variant/", tmp$Chr, ":g.", tmp$Start, tmp$Ref, "\\%3E", tmp$Alt, "}{", tmp$Gene.refGene, "}}")
  hyper_refs <- paste0("https://search.cancervariants.org/\\#", tmp$Gene.refGene, "\\%20", substr(x = tmp$AAChange, start = 3, stop = nchar(tmp$AAChange)))
  tmp$AAChange <- paste0("{\\href{", hyper_refs, "}{", tmp$AAChange, "}}")
  tmp$Gene.refGene <- tmp$Gene.refGene_new
  tmp$VAF <- paste0(tmp$Variant_Allele_Frequency, " (", tmp$Variant_Reads, ")")
  tmp$VAF <- gsub(pattern = "%", replacement = "\\%", x = tmp$VAF, fixed = TRUE)
  tmp$cosmic <- lapply(strsplit(x = as.character(tmp$cosmic_coding), split = "="), function(x){return(unlist(x)[2])})
  tmp$cosmic <- lapply(strsplit(x = as.character(tmp$cosmic), split = ";"), function(x){return(unlist(x)[1])})
  tmp$cosmic <- gsub(pattern = ",", replacement = ", ", x = tmp$cosmic)
  tmp$cosmic[which(is.na(tmp$cosmic))] <- "."
  tmp$ExonicFunc.refGene <- gsub(pattern = "nonsynonymous SNV", replacement = "nsSNV", x = tmp$ExonicFunc.refGene)
  tmp$ExonicFunc.refGene <- gsub(pattern = "stopgain", replacement = "SG", x = tmp$ExonicFunc.refGene)
  tmp$ExonicFunc.refGene <- gsub(pattern = "nonframeshift deletion", replacement = "nfsDel", x = tmp$ExonicFunc.refGene)
  tmp$ExonicFunc.refGene <- gsub(pattern = "frameshift deletion", replacement = "fsDel", x = tmp$ExonicFunc.refGene)
  tmp$ExonicFunc.refGene <- gsub(pattern = "nonframeshift insertion", replacement = "nfsIns", x = tmp$ExonicFunc.refGene)
  tmp$ExonicFunc.refGene <- gsub(pattern = "frameshift insertion", replacement = "fsIns", x = tmp$ExonicFunc.refGene)
  tmp$ExonicFunc.refGene <- gsub(pattern = "startloss", replacement = "SL", x = tmp$ExonicFunc.refGene)
  tmp$ExonicFunc.refGene <- gsub(pattern = "splice_region_variant&synonymous_variant", replacement = "splice", x = tmp$ExonicFunc.refGene)
  tmp$ExonicFunc.refGene <- gsub(pattern = "nonframeshift substitution", replacement = "nfsSub", x = tmp$ExonicFunc.refGene)
  tmp$AF_nfe[is.na(tmp$AF_nfe)] <- "."
  tmp$condel.label[is.na(tmp$condel.label)] <- "."
  tmp$AAChange <- gsub(pattern = ";", replacement = "; ", x = tmp$AAChange)
  tmp <- tmp[order(tmp$Variant_Allele_Frequency, decreasing =  TRUE), , drop = FALSE]
  tmp <- tmp[, c(18, 4, 3, 19, 11:12, 20, 8:7)]
  colnames(tmp) <- c("Gen", "AA-Austausch", "Funktion", "VAF (Coverage)", "MAF", "Condel", "Cosmic", "OG", "TSG")
  cap_1 <- "Alle identifizierten somatischen Mutationen in Cancergenes geordnet nach VAF.\\label{som_mut_cg}"
  kable(tmp, format = "latex", caption = cap_1, booktabs = T, longtable = T, digits = 2, row.names = F, escape = FALSE) %>% kable_styling(latex_options = c( "HOLD_position", "repeat_header"), font_size = 9) %>% column_spec(c(2, 7), width = "6em") %>% column_spec(c(1, 5), width = "4em") %>% column_spec(c(3:4), width = "4em") %>% column_spec(c(6, 8:9), width = "2em") %>% row_spec(0, angle = 60)
}
@
\clearpage
 
% %%%% MUTATIONSANALYSE %%%%
% TODO CNV Analsis
% \section{Copy Number Variations}

\section{Wichtige Signalwege}\label{imp_pathways_section}
Es werden fünf wichtige Signalwege betrachtet: \textit{RAF-MEK-ERK, PI3K-AKT-mTOR, DNA-Damage-Response, Cell Cycle} und \textit{Tyrosine Kinases}. Es wird untersucht, welche Gene in diesen Signalwege eine Mutation tragen. Diese Mutationen sind analog zu Kapitel \ref{som_mut_section} in Tabelle \ref{imp_ptws} dargestellt. Wenn in einem Signalweg keine Mutation identifiziert wurde, taucht er in der Tabelle nicht auf.\\
Außerdem werden auch die CNVs auf ihre Zugehörigkeit zu den fünf wichtigen Signalwegen untersucht und in Tabelle \ref{imp_ptws_cnv} dargestellt. Dabei werden Gene mit der selben totalen Kopienanzahl in einer Zeile zusammengefasst.

\subsection{Mutationen in wichtigen Signalwegen}
<<som_mut_imp_pws, echo=FALSE, eval=TRUE, results="tex">>=
options(knitr.kable.NA = ".")
tmp <- mutation_analysis_result$important_pathways
id_to <- which(tmp$Pathway == "Topart")
if(length(id_to) != 0) {
  tmp <- tmp[-c(id_to:dim(tmp)[1]), ]
}
if (length(tmp) == 0){
  cap <- "Keine Mutationen in wichtigen Signalwegen identifiziert.\\label{imp_ptws}"
  kable(data.frame(Signalweg = c("."), Gen = c("."), 'AA-Austausch' = c("."), Funktion = c("."), VAF = c("."), MAF = c("."), Condel = c("."), Cosmic = c(".")), format = "latex", caption = cap, booktabs = T, longtable = T, row.names = F) %>% kable_styling(latex_options = c( "HOLD_position", "repeat_header"), font_size = 9) %>% column_spec(c(3, 4, 9), width = "5em") %>% column_spec(c(1:2, 5:6, 7), width = "3em") %>% column_spec(c(8), width = "1em") %>% column_spec(1, bold = T) %>% row_spec(0, angle = 60)
} else{
  tmp <- tmp[ ,c("Pathway", "Symbol", "AAChange", "ExonicFunc", "VAF", "Reads", "MAF", "Condel", "COSMIC")]
  colnames(tmp) <- c("Pathway", "Symbol", "Aminoacid Change", "ExonicFunction", "VAF", "Reads", "MAF", "Condel", "COSMIC")
  #tmp$VAF <- gsub(pattern = "%",replacement = "\\%", x = tmp$VAF, fixed = TRUE)
  tmp$VAF <- paste0(tmp$VAF, " (", tmp$Reads, ")")
  tmp$cosmic <- lapply(strsplit(x = as.character(tmp$COSMIC), split = "="), function(x){return(unlist(x)[2])})
  tmp$cosmic <- lapply(strsplit(x = as.character(tmp$cosmic), split = ";"), function(x){return(unlist(x)[1])})
  tmp$cosmic <- gsub(pattern = ",", replacement = ", ", x = tmp$cosmic)
  tmp$ExonicFunction <- gsub(pattern = "nonsynonymous SNV", replacement = "nsSNV", x = tmp$ExonicFunction)
  tmp$ExonicFunction <- gsub(pattern = "stopgain", replacement = "SG", x = tmp$ExonicFunction)
  tmp$ExonicFunction <- gsub(pattern = "nonframeshift deletion", replacement = "nfsDel", x = tmp$ExonicFunction)
  tmp$ExonicFunction <- gsub(pattern = "frameshift deletion", replacement = "fsDel", x = tmp$ExonicFunction)
  tmp$ExonicFunction <- gsub(pattern = "nonframeshift insertion", replacement = "nfsIns", x = tmp$ExonicFunction)
  tmp$ExonicFunction <- gsub(pattern = "frameshift insertion", replacement = "fsIns", x = tmp$ExonicFunction)
  tmp$ExonicFunction <- gsub(pattern = "startloss", replacement = "SL", x = tmp$ExonicFunction)
  tmp$ExonicFunction <- gsub(pattern = "splice_region_variant&synonymous_variant", replacement = "splice", x = tmp$ExonicFunction)
  tmp$ExonicFunction <- gsub(pattern = "nonframeshift substitution", replacement = "nfsSub", x = tmp$ExonicFunction)
  tmp <- tmp[, c(1:5, 7:8, 10)]
  dup <- which(duplicated(tmp))
  if (length(dup) > 0){
    tmp[dup, 7] <- paste0(tmp[dup, 7], ".")
  }
  colnames(tmp) <- c("Signalweg", "Gen", "AA-Austausch", "Funktion", "VAF (Coverage)", "MAF", "Condel", "Cosmic")
  kable(tmp, format = "latex", caption = "Identifizierte somatische Mutationen in wichtigen Signalwegen\\label{imp_ptws}", booktabs = T, longtable = T, row.names = F) %>% kable_styling(latex_options = c( "HOLD_position", "repeat_header"), font_size = 9) %>% column_spec(c(3, 4, 9), width = "5em") %>% column_spec(c(1:2, 5:6, 7), width = "3em") %>% column_spec(c(8), width = "1em") %>% column_spec(1, bold = T) %>% row_spec(0, angle = 60)
}
@
% \subsection{CNVs in wichtigen Signalwegen}
\clearpage

% TODO
%\subsection{Fusionen}
%In folgender Tabelle \ref{fs_ov} werden übersichtlich alle detektierten Fusionen mit vier wichtigen Eigenschaften (bekannt, reziprok, readthrough und Cosmic-Annotation dieser Genkombination) dargestellt. Dabei muss immer nur eines der beiden Fusionsgene in der vorgegebenen Genliste stehen. Je höher die Fusion in der Tabelle steht, desto öfter wurde die Fusion in der Probe detektiert. In der zweiten Tabelle \ref{fs_bp} werden zu den Fusionen alle möglichen Bruchpunkte in genomischen Koordinaten bezüglich \textit{hg19} beschrieben.\\
%Die dritte Tabelle zeigt für Fusionen, bei denen jeweils beide Bruchpunkte in einer codierenden Region liegen, einen Plot des Fusionsprodukten mit den erhaltenen Proteindomainen. Das sind \textit{in-frame} und \textit{out-of-frame} Fusionen. Die letzte Tabelle \ref{fs_sq} gibt die Sequenz um den Bruchpunkt an. Dabei wird aus Übersichtlichkeitsgründen die Sequenz für jedes, an der Fusion beteiligte, Gen getrennt angegeben.

<<echo=FALSE, results='tex', eval=FALSE>>=
tmp <- fusions$Fusion_OV
if (is.null(tmp)) {
  cat("Keine Fusionen identifiziert")
  } else {
  kable(tmp, format = "latex", caption = "Identifizierte Fusionen \\label{fs_ov}", booktabs = T, longtable = T, digits = 3, row.names = F) %>% kable_styling(latex_options = c("striped", "HOLD_position", "repeat_header"), font_size = 10)
}
@

<<echo=FALSE, results='tex', eval=FALSE>>=
tmp <- fusions$Table[, c(1:4, 6)]
if (!is.null(tmp)) {
  kable(tmp, format = "latex", caption = "Bruchpunkte der identifizierten Fusionen \\label{fs_bp}", booktabs = T, longtable = T, digits = 3, row.names = F) %>% kable_styling(latex_options = c("striped", "HOLD_position", "repeat_header"), font_size = 10)
}
@

<<echo=FALSE, results='tex', eval=FALSE>>=
tmp <- fusions$Plots

if(!is.null(tmp)){
  id <- which(is.na(tmp$file))
  if(length(id) > 0) {
    tmp$Gen1 <- as.character(tmp$Gen1)
    tmp$Gen1[-id] <- paste0("\\multirow{1}{*}[2cm]{", tmp$Gen1[-id], "}")
    tmp$Gen2 <- as.character(tmp$Gen2)
    tmp$Gen2[-id] <- paste0("\\multirow{1}{*}[2cm]{", tmp$Gen2[-id], "}")
    tmp$plots <- "Kein Plot verfügbar."
    tmp$plots[-id] <- paste0("\\includegraphics[height=4cm]{", tmp$file[-id], "}")
  } else {
    tmp$plots <- sprintf('![Alt text](%s)', tmp$file)
    tmp$Gen1 <- paste0("\\multirow{1}{*}[2cm]{", as.character(tmp$Gen1), "}")
    tmp$Gen2 <- paste0("\\multirow{1}{*}[2cm]{", as.character(tmp$Gen2), "}")
  }
  tmp <- tmp[, c(1:2, 5)]
  colnames(tmp)[3] <- "Ansicht des Fusionsprodukt mit Angabe der Domainen"
  kable(tmp, format = "latex", escape = FALSE, caption = "Plot  identifizierten Fusionen. Der senkrechte Strich markiert den Bruchpunkt.", booktabs = T, longtable = T, digits = 3, row.names = F) %>% kable_styling(latex_options = c("striped", "HOLD_position", "repeat_header"), font_size = 10) %>% column_spec(1,extra_css = "vertical-align:middle;")
  }
@

<<echo=FALSE, results='tex', eval=FALSE>>=
tmp <- fusions$Table[, c(1, 3, 5)]
if (!is.null(tmp)) {
  seq <- strsplit(x = as.character(tmp$Sequenz), split = "*", fixed = TRUE)
  seq1 <- unlist(lapply(seq, function(x){return(x[[1]])}))
  seq2 <- unlist(lapply(seq, function(x){return(x[[2]])}))
  k <- dim(tmp)[1]
  new_tmp <- as.data.frame(matrix(NA, ncol = 3, nrow = 2*k))
  new_tmp[seq(from = 1, to = 2*k - 1, by = 2), 1] <- paste(tmp$Gen1, tmp$Gen2, sep = "--")
  new_tmp[seq(from = 2, to = 2*k, by = 2), 1] <- paste(tmp$Gen1, tmp$Gen2, sep = "--")
  new_tmp[seq(from = 1, to = 2*k - 1, by = 2), 2] <- as.character(tmp$Gen1)
  new_tmp[seq(from = 1, to = 2*k - 1, by = 2), 3] <- paste0(seq1, "*")
  new_tmp[seq(from = 2, to = 2*k, by = 2), 2] <- as.character(tmp$Gen2)
  new_tmp[seq(from = 2, to = 2*k, by = 2), 3] <- paste0("*", seq2)
  colnames(new_tmp) <- c("Fusion", "Gen", "Sequenz")  
collapse_rows(kable(new_tmp, format = "latex", caption = "Sequenzen der identifizierten Fusionen. Der * markiert den Bruchpunkt. \\label{fs_sq}", booktabs = T, longtable = T, digits = 3, row.names = F) %>% kable_styling(latex_options = c("HOLD_position", "repeat_header"), font_size = 8))
}
@
% \clearpage

%%%% QUALITÄT %%%%
\section{Qualit\"{a}tskontrollen und Sequenzierungsstatistiken}

Für die Analysen werden nur Reads mit einer durchschnittlichen Basenqualität von mehr als 28 nach der \textit{Base Quality Score Recalibration} (BQSR) berücksichtigt. In Abbildung \ref{base_qual} sind die Basenqualitäten für jede Position in den Reads dargestellt. Für jede Probe einmal direkt aus dem Sequenzierer (Abb \ref{base_qual}, obere Reihe) und einmal nach der BQSR (Abb \ref{base_qual}, untere Reihe).

\begin{figure}[h]
\centering
\subfloat[Tumor Qualit\"at]{\includegraphics[width = 0.3\textwidth]{\Sexpr{tumor}}} \quad %
\subfloat[Tumor Qualit\"at nach BQSR]{\includegraphics[width = 0.3\textwidth]{\Sexpr{tumor_bsqr}}} 
\caption{Darstellung der Sequenzierung (a) als Output aus dem Sequenzierer und (b) nach der BQSR}
\label{base_qual}
\end{figure}

# TODO 
\begin{table}[h]
  \centering
  \caption{Qualit\"atsparameter zu den Proben}
  \label{qual}
  \begin{tabular}{p{0.2\textwidth}p{0.25\textwidth}p{0.25\textwidth}p{0.25\textwidth}}
  \hline Gewebe & Tumor & Soll \\\hline
  Mittlere Coverage & \Sexpr{round(x = sum(stats$cover$cov[[1]][, 2] * stats$cover$cov[[1]][, 5]), digits = 2)} Reads & Sehr gut >100, gut: 80-100 \\
  Anteil der Basen > 20 Reads & \Sexpr{round(stats$cover$perc[[1]][1], digits = 2) * 100} \% & >90\% \\
  Anteil der Basen > 100 Reads & \Sexpr{round(stats$cover$perc[[1]][2], digits = 2) * 100} \% & Sehr gut: >90\%, akzeptabel: >60\% \\
  Anteil der exonischen Basen > 20 Reads & \Sexpr{round(stats$cover_exons$perc[[1]][1], digits = 2) * 100} \% & >90\% \\
  Anteil der exonischen Basen > 100 Reads & \Sexpr{round(stats$cover_exons$perc[[1]][2], digits = 2) * 100} \% Sehr gut: >90\%, akzeptabel: >60\% \\
  Insertgröße & \Sexpr{stats$avreads$tin} $\pm$  \Sexpr{stats$avreads$tin_sd}bp & >100 bp \\
  GC-Anteil & \Sexpr{stats$qc_check$gc_content[[2]]} \% & 40-60 \% \\
  Mittlere Qualität pro Base & \Sexpr{round(stats$qc_check$mean_QC[[1]], digits = 2) } & > 0 \\\hline
  
  \end{tabular}
  \end{table}

\subsection{Coverage}

Die Mean-Coverage und die Gesamtcoverage der Tumorprobe ist ein weiteres Qualitätsmerkmal. Sind die Werte zu niedrig, sind viele Stellen im Genom unzureichend abgedeckt. Abbildung \ref{cov_plot} zeigt die kummulative Verteilung, durch die der Anteil an targeted Basen, die von einer bestimmten Anzahl an Reads abgedeckt sind, beschrieben wird.

\begin{figure}
  \centering
  \subfloat[Coverage]{\includegraphics[width=0.4\textwidth]{\Sexpr{coverage_out}}
  \label{cov_plot}}  \quad %
  \subfloat[Reads]{%
  \begin{tabular}[b]{ll}
  \hline & Tumor \\\hline
  Mittelwert & \Sexpr{round(x =sum(stats$cover$cov[[1]][, 2] * stats$cover$cov[[1]][, 5]), digits = 2  )}\\
  Anzahl aller Reads & \Sexpr{stats$avreads$nRT} Mio. Reads \\\hline
  \end{tabular}
  }
  \label{fig:figure-and-table}
\end{figure}

\clearpage

\appendix
\section{Tabellen aller detektierten Mutationen}
\subsection{Mutationen}\label{all_som_mut}

<<eval=TRUE, results="tex", echo=FALSE>>=
tmp <-  mutation_analysis_result$som_mut_tab[, c(1:5, 7, 11:12, 14, 16:20, 8:9)]
# add a hyperlink to metaKB and one to GenomeNexus
tmp$AAChange <- gsub(pattern = "_", replacement = "\\_", x = tmp$AAChange, fixed = TRUE)
tmp$Gene.refGene_new <- paste0("{\\href{https://www.genomenexus.org/variant/", tmp$Chr, ":g.", tmp$Start, tmp$Ref, "\\%3E", tmp$Alt, "}{", tmp$Gene.refGene, "}}")
hyper_refs <- paste0("https://search.cancervariants.org/\\#", tmp$Gene.refGene, "\\%20", substr(x = tmp$AAChange, start = 3, stop = nchar(tmp$AAChange)))
tmp$AAChange <- paste0("{\\href{", hyper_refs, "}{", tmp$AAChange, "}}")
tmp$Gene.refGene <- tmp$Gene.refGene_new
tmp$Variant_Allele_Frequency <- gsub(pattern = "%",replacement = "\\%", x = tmp$Variant_Allele_Frequency, fixed = TRUE)
tmp$VAF <- paste0(tmp$Variant_Allele_Frequency, " (", tmp$Variant_Reads, ")")
tmp$cosmic <- lapply(strsplit(x = as.character(tmp$cosmic_coding), split = "="), function(x){return(unlist(x)[2])})
tmp$cosmic <- lapply(strsplit(x = as.character(tmp$cosmic), split = ";"), function(x){return(unlist(x)[1])})
tmp$cosmic <- gsub(pattern = ",", replacement = ", ", x = tmp$cosmic)
tmp$cosmic[which(is.na(tmp$cosmic))] <- "."
tmp$ExonicFunc.refGene <- gsub(pattern = "nonsynonymous SNV", replacement = "nsSNV", x = tmp$ExonicFunc.refGene)
tmp$ExonicFunc.refGene <- gsub(pattern = "stopgain", replacement = "SG", x = tmp$ExonicFunc.refGene)
tmp$ExonicFunc.refGene <- gsub(pattern = "nonframeshift deletion", replacement = "nfsDel", x = tmp$ExonicFunc.refGene)
tmp$ExonicFunc.refGene <- gsub(pattern = "frameshift deletion", replacement = "fsDel", x = tmp$ExonicFunc.refGene)
tmp$ExonicFunc.refGene <- gsub(pattern = "nonframeshift insertion", replacement = "nfsIns", x = tmp$ExonicFunc.refGene)
tmp$ExonicFunc.refGene <- gsub(pattern = "frameshift insertion", replacement = "fsIns", x = tmp$ExonicFunc.refGene)
tmp$ExonicFunc.refGene <- gsub(pattern = "startloss", replacement = "SL", x = tmp$ExonicFunc.refGene)
tmp$ExonicFunc.refGene <- gsub(pattern = "splice_region_variant&synonymous_variant", replacement = "splice", x = tmp$ExonicFunc.refGene)
tmp$ExonicFunc.refGene <- gsub(pattern = "nonframeshift substitution", replacement = "nfsSub", x = tmp$ExonicFunc.refGene)
tmp$AF_nfe[is.na(tmp$AF_nfe)] <- "."
tmp$condel.label[is.na(tmp$condel.label)] <- "."
tmp$AAChange <- gsub(pattern = ";", replacement = "; ", x = tmp$AAChange)
tmp <- tmp[order(tmp$Variant_Allele_Frequency, decreasing =  TRUE), , drop = FALSE]
tmp$Cancergene <- ""
tmp$Cancergene[which(tmp$is_tumorsuppressor == 1)] <- "TSG"
tmp$Cancergene[which(tmp$is_oncogene == 1)] <- paste0("OG", tmp$Cancergene[which(tmp$is_oncogene == 1)])
ihs <- which(tmp$is_hotspot != 0)
tmp <- tmp[, c(1, 4, 3, 18, 8:9, 19, 20)]
colnames(tmp) <- c("Gen", "AA-Austausch", "Funktion", "VAF (Coverage)", "MAF", "Condel", "Cosmic", "Cancergene")
cap_1 <- "Alle identifizierten somatischen Mutationen geordnet nach VAF"
if(dim(tmp)[1] != 0 & length(ihs) == 0){
  kable(tmp, format = "latex", caption = cap_1, booktabs = T, longtable = T, digits = 2, row.names = F, escape = FALSE) %>% kable_styling(latex_options = c( "HOLD_position", "repeat_header"), font_size = 9) %>% column_spec(c(2, 7), width = "6em") %>% column_spec(c(1, 5), width = "5em") %>% column_spec(c(3:4), width = "4em") %>% column_spec(6, width = "2em") %>% row_spec(0, angle = 60)
} else if(dim(tmp)[1] != 0 & length(ihs) > 0){
  kable(tmp, format = "latex", caption = cap_1, booktabs = T, longtable = T, digits = 2, row.names = F, escape = FALSE) %>% kable_styling(latex_options = c( "HOLD_position", "repeat_header"), font_size = 9) %>% column_spec(c(2, 7), width = "8em") %>% column_spec(c(1, 5), width = "5em") %>% column_spec(c(3:4), width = "4em") %>% column_spec(6, width = "2em") %>% row_spec(0, angle = 60)  %>% row_spec(ihs, bold = TRUE)
} else {cat("Keine somatischen Mutationen identifiziert.")}
@

\clearpage

\section{Informationen zu verwendeter Software und Paketen}

\subsection{Genom}
\begin{itemize}
\item UCSC hg19
\end{itemize}

\subsection{Programmversionen}
\begin{itemize}
\item FastQC: 0.11.10.devel
\item Trimmomatic: 0.39
\item BWA: 0.7.17-r1198-dirty
\item bam-readcount: 0.8.0-unstable-7-625eea2
\item samtools 1.10
\item GATK: 3.8-1-0-gf15c1c3ef
\item picard-tools: 2.20.6
\item VarScan: 2.4.4
\item annovar: 2020Jun08
\item bedtools: 2.28.0
\item Java: openjdk-8-hotspot
\end{itemize}

\subsection{Annovar Datenbanken}
\begin{itemize}
\item refGene GRCh37
\item dbnsfp41a
\item avsnp150 (dbSNP)
\item clinvar\_20200316
\item intervar\_20180118
\item cosmic91
\item gnomad\_genome Version 2.1.1
\end{itemize}

\end{document}





